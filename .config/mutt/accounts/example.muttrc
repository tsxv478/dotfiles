# vim: filetype=muttrc

set realname = "<user>"
set from = "<user>@<host>"
set sendmail = "msmtp -a <user>@<host>"
alias me <user> <<user>@<host>>
set folder = "$HOME/.local/share/mail/<user>@<host>"
set header_cache = "$HOME/.cache/mutt/<user>@<host>/headers"
set message_cachedir = "$HOME/.cache/mutt/<user>@<host>/bodies"
set mbox_type = Maildir
set hostname = "<host>"
source $HOME/.config/mutt/switch.muttrc
set spoolfile = +INBOX
set record = +Sent
set postponed = +Drafts
set trash = +Trash
mailboxes "=INBOX" "=Sent" "=Drafts" "=Archive" "=Junk" "=Trash"

macro index,pager gi "<change-folder>=INBOX<enter>" "go to inbox"
macro index,pager Mi ";<save-message>=INBOX<enter>" "move mail to inbox"
macro index,pager Ci ";<copy-message>=INBOX<enter>" "copy mail to inbox"
macro index,pager gs "<change-folder>=Sent<enter>" "go to sent"
macro index,pager Ms ";<save-message>=Sent<enter>" "move mail to sent"
macro index,pager Cs ";<copy-message>=Sent<enter>" "copy mail to sent"
macro index,pager gd "<change-folder>=Drafts<enter>" "go to drafts"
macro index,pager Md ";<save-message>=Drafts<enter>" "move mail to drafts"
macro index,pager Cd ";<copy-message>=Drafts<enter>" "copy mail to drafts"
macro index,pager ga "<change-folder>=Archive<enter>" "go to archive"
macro index,pager Ma ";<save-message>=Archive<enter>" "move mail to archive"
macro index,pager Ca ";<copy-message>=Archive<enter>" "copy mail to archive"
macro index,pager gj "<change-folder>=Junk<enter>" "go to junk"
macro index,pager Mj ";<save-message>=Junk<enter>" "move mail to junk"
macro index,pager Cj ";<copy-message>=Junk<enter>" "copy mail to junk"
macro index,pager gt "<change-folder>=Trash<enter>" "go to trash"
macro index,pager Mt ";<save-message>=Trash<enter>" "move mail to trash"
macro index,pager Ct ";<copy-message>=Trash<enter>" "copy mail to trash"

macro index o "<shell-escape>mbsync -V <user>@<host><enter>" "run mbsync to sync <user>@<host>"
macro index \eg "<enter-command>unset wait_key<enter><shell-escape>gpg --list-secret-keys; printf 'Enter email ID of user to publish: '; read eID; printf 'Enter fingerprint of GPG key to publish: '; read eFGPT; /usr/local/libexec/gpg-wks-client --create \$eFGPT \$eID | msmtp --read-envelope-from --read-recipients -a <user>@<host><enter>"  "publish GPG key to WKS provider"
macro index \eh "<pipe-message>/usr/local/libexec/gpg-wks-client --receive | msmtp --read-envelope-from --read-recipients -a <user>@<host><enter>" "confirm GPG publication"
